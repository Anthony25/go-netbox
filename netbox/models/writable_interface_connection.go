// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WritableInterfaceConnection writable interface connection
// swagger:model WritableInterfaceConnection
type WritableInterfaceConnection struct {

	// Status
	ConnectionStatus bool `json:"connection_status,omitempty"`

	// ID
	// Read Only: true
	ID int64 `json:"id,omitempty"`

	// Interface a
	// Required: true
	InterfaceA *int64 `json:"interface_a"`

	// Interface b
	// Required: true
	InterfaceB *int64 `json:"interface_b"`
}

// Validate validates this writable interface connection
func (m *WritableInterfaceConnection) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInterfaceA(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateInterfaceB(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WritableInterfaceConnection) validateInterfaceA(formats strfmt.Registry) error {

	if err := validate.Required("interface_a", "body", m.InterfaceA); err != nil {
		return err
	}

	return nil
}

func (m *WritableInterfaceConnection) validateInterfaceB(formats strfmt.Registry) error {

	if err := validate.Required("interface_b", "body", m.InterfaceB); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WritableInterfaceConnection) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WritableInterfaceConnection) UnmarshalBinary(b []byte) error {
	var res WritableInterfaceConnection
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
